{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\nimport * as XLSX from 'xlsx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst EXCEL_EXTENSION = '.xlsx';\nexport let ApisService = /*#__PURE__*/(() => {\n  class ApisService {\n    constructor(http) {\n      this.http = http;\n      this.main_url = \"https://apitest.stradebase.com/\";\n      this.login_enpoint = this.main_url + \"/admin/login\";\n      // get_users = this.main_url + \"/admin/get-users\";\n      this.get_users = this.main_url + \"/user/list\";\n      this.create_user = this.main_url + \"/admin/create\";\n      this.get_admin = this.main_url + \"/admin/list\";\n      this.get_card_list = this.main_url + \"/card/list\";\n      this.get_card_list_locked = this.main_url + \"/card/list/?status=pending approval\";\n      this.get_trending_list = this.main_url + \"/card/trending\";\n      this.get_popular_list = this.main_url + \"/card/popular\";\n      this.get_recent_list = this.main_url + \"/card/recently-played\";\n      this.get_playlist = this.main_url + \"/playlist/\";\n      this.all_playlist = this.main_url + \"/playlist/list\";\n      this.get_playlist_live = this.main_url + \"/playlist/live\";\n      this.create_playlist = this.main_url + \"/playlist/create\";\n      this.market = this.main_url + \"/card-listings/market\";\n      this.get_market_details_url = this.main_url + \"/card-listings/child-listings/\";\n      this.verification_endpoint = this.main_url + \"/admin/verify\";\n      this.get_card_details = this.main_url + \"/card/\";\n      this.get_distribute_details = this.main_url + \"/revenue/distribution/\";\n      this.hotpick_url = this.main_url + \"/card/hot-pick\";\n      this.ads_url = this.main_url + \"/ads/create\";\n      this.get_adverts_url = this.main_url + \"/ads\";\n      this.delete_ad_url = this.main_url + \"/ads/\";\n      this.update_card_url = this.main_url + \"/card/\";\n      this.delete_tracks_url = this.main_url + \"/playlist/tracks\";\n      this.approve_card_url = this.main_url + \"/card/approve/\";\n      this.lock_card_url = this.main_url + \"/card/reject/\";\n      this.topup_url = this.main_url + \"/user/transaction/\";\n      this.userDetails_url = this.main_url + \"/user/transactions/\";\n      this.record_revenue_url = this.main_url + \"/revenue/\";\n      this.record_transaction_url = this.main_url + \"/admin/transaction\";\n      this.add_to_live_url = this.main_url + \"/playlist/tracks/add-to-live\";\n      this.revenue_list_url = this.main_url + \"/revenue/\";\n      this.revenue_batch_url = this.main_url + \"/revenue/\";\n      this.kb_list_url = this.main_url + \"/kb/list/\";\n      this.header_list_url = this.main_url + \"/headers/list/\";\n      this.verify_user_url = this.main_url + \"/user/activate/\";\n      this.disable_user_url = this.main_url + \"/user/suspend/\";\n      this.delete_kb_url = this.main_url + \"/kb/\";\n      this.delete_user_account = this.main_url + \"/user/\";\n      this.retrieve_user_account = this.main_url + \"/user/\";\n      this.delete_headers_url = this.main_url + \"/headers/\";\n      this.distribute_url = this.main_url + \"/revenue/distribute/\";\n      this.metrics_url = this.main_url + \"/admin/metrics\";\n      this.admin_transactions_url = this.main_url + \"/admin/transactions\";\n      this.kb_url = this.main_url + \"/kb/\";\n      this.headers_url = this.main_url + \"/headers/\";\n      this.withdrawals_url = this.main_url + \"/withdrawals\";\n      this.notifications_url = this.main_url + \"/notifications/list\";\n      this.notification_url = this.main_url + \"/user/send-notification/\";\n      this.timeout_value = 20000;\n    }\n    isAuthenticated() {\n      // return true;\n      var values = localStorage.getItem(\"token\");\n      console.log(\"TOKEN IN DATA PROVIDER CONSTRUCT \" + values);\n      if (values == null || values == 'null') {\n        return false;\n      } else {\n        return true;\n      }\n    }\n    exportTableElmToExcel(element, fileName) {\n      const ws = XLSX.utils.table_to_sheet(element.nativeElement);\n      // generate workbook and add the worksheet\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, ws, 'Sheet1');\n      // save to file\n      XLSX.writeFile(workbook, `${fileName}${EXCEL_EXTENSION}`);\n    }\n    login(data) {\n      const promise = new Promise((resolve, reject) => {\n        const apiURL = this.login_enpoint;\n        this.http.post(this.login_enpoint, data).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    verify(data) {\n      const promise = new Promise((resolve, reject) => {\n        const apiURL = this.verification_endpoint;\n        this.http.post(this.verification_endpoint, data).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    all_users(token, page) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      console.log(\"page TOKEN IN PROVIDER \" + page);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.main_url + `/user/list?page=${page}`, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    all_users_filter(token, from, to) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      console.log(\"page TOKEN IN PROVIDER \" + from);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.main_url + `/user/list?from=${from}&to=${to}`, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    search(token, search_item) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      console.log(\"page TOKEN IN PROVIDER \" + search_item);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.main_url + `/search?${search_item}`, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    create_admin_user(data, token) {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.post(this.create_user, data, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    all_admins(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_admin, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    cardList(token, page) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        // this.http.get(this.get_card_list, httpOptions)\n        this.http.get(this.main_url + `/card/list?page=${page}`, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    cardList_filter(token, from, to) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      console.log(\"page TOKEN IN PROVIDER \" + from);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.main_url + `/card/list?from=${from}&to=${to}`, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    cardListlocked(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_card_list_locked, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    trendingcardList(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_trending_list, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    popular_card(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_popular_list, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    recent_card(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_recent_list, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    display_playlist(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_playlist, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    display_playlist_live(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_playlist_live, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    createPlaylist(data, token) {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.post(this.create_playlist, data, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    marketList(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.market, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    retrieveHotpick(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.hotpick_url, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    ///Card Detauls\n    cardDetails(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_card_details + id, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    userDetails(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.userDetails_url + id, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    marketDetails(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_market_details_url + id, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    distributionDetails(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_distribute_details + id, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    uploadImage(image, url, token) {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        const formData = new FormData();\n        formData.append('photo', image);\n        formData.append('link', \"https://google.com\");\n        this.http.post(this.ads_url, formData, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    all_ads(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.get_adverts_url, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    metrics(token, page) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.main_url + `/admin/metrics?page=${page}`, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    metrics_filter(token, from, to) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.main_url + `/admin/metrics?from=${from}&to=${to}`, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    withdrawals(token, page) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.main_url + `/withdrawals?page=${page}`, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    withdrawals_filter(token, from, to) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.main_url + `/withdrawals?from=${from}&to=${to}`, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    notification(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.notifications_url, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    admin_transactions(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.admin_transactions_url, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    revenue_list(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.revenue_list_url + id, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    revenue_batch_list(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.revenue_batch_url, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    kb_list(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.kb_list_url, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    header_list(token) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.get(this.header_list_url, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    //Delete Ads\n    deleteAds(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.delete(this.delete_ad_url + id, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    publishId(token, id, apple_id, youtube_id, spotify_id, deezer_id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      console.log(\"Youtube\", youtube_id);\n      console.log(\"Apple Music\", apple_id);\n      console.log(\"Spotify\", spotify_id);\n      console.log(\"Deezer\", deezer_id);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        const formData = new FormData();\n        if (apple_id != undefined) {\n          formData.append('apple_id', apple_id);\n        } else {\n          // formData.append('apple_id', \"\");\n        }\n        if (youtube_id != undefined) {\n          formData.append('youtube_id', youtube_id);\n        } else {\n          // formData.append('youtube_id', \"\");\n        }\n        if (spotify_id != undefined) {\n          formData.append('spotify_id', spotify_id);\n        } else {\n          // formData.append('spotify_id', \"\");\n        }\n        if (deezer_id != undefined) {\n          formData.append('deezer_id', deezer_id);\n        } else {\n          // formData.append('deezer_id', \"\");\n        }\n        this.http.put(this.update_card_url + id, formData, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    //Update Ads\n    updateAds(token, id, status) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        const formData = new FormData();\n        formData.append('is_active', status);\n        this.http.put(this.delete_ad_url + id, formData, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    //Delete Ads\n    deleteTracks(token, data) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\",\n            data: data\n          })\n        };\n        this.http.delete(this.delete_tracks_url, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    updateCard(token, id, distribute) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      console.log(\"ID TO PASS \" + id);\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.put(this.approve_card_url + id, distribute, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    lockCard(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      console.log(\"ID TO PASS \" + id);\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.put(this.lock_card_url + id, null, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    verifyUser(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.put(this.verify_user_url + id, null, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    disableUser(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        // const httpOptions = {\n        //   headers: new HttpHeaders({\n        //     Accept: \"application/json\",\n        //     Authorization: \"Bearer \" + token,\n        //     'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n        //   }),\n        // };\n        const headers = new HttpHeaders().set('content-type', 'application/json').set('Access-Control-Allow-Origin', '*').set('Authorization', 'Bearer' + token).set('x-api-key', 'fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu');\n        console.log(\"CONSTANTSSS::::: \" + JSON.stringify(headers));\n        this.http.put(this.disable_user_url + id, null, {\n          'headers': headers\n        }).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    deleteBlog(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.delete(this.delete_kb_url + id, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    delete_user(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.delete(this.delete_user_account + id, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    deleteHeaders(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.delete(this.delete_headers_url + id, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    topupWallet(token, id, data) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      console.log(\"ID TO PASS \" + id);\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.post(this.topup_url + id, data, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    sendPush(token, data) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.post(this.notification_url, data, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    record_revenue(token, data) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.post(this.record_revenue_url, data, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    record_transaction(token, data) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.post(this.record_transaction_url, data, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    add_to_live(token, data) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.post(this.add_to_live_url, data, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    hotPicked(token, data) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.post(this.hotpick_url, data, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    distribute(token, id) {\n      console.log(\"BEARER TOKEN IN PROVIDER \" + token);\n      // return new Promise((resolve, reject) => {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        this.http.post(this.distribute_url + id, null, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    kbUpload(image, title, content, category_id, read_time, token) {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        const formData = new FormData();\n        formData.append('photo', image);\n        formData.append('title', title);\n        formData.append('content', content);\n        formData.append('category_id', category_id);\n        formData.append('read_time_mins', read_time);\n        this.http.post(this.kb_url, formData, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n    headersUpload(image, title, content, cta_text, cta_link, token) {\n      const promise = new Promise((resolve, reject) => {\n        const httpOptions = {\n          headers: new HttpHeaders({\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + token,\n            'x-api-key': \"fgy6435678hghytr534qwe567890poijhgyftr543wesdrtfyu\"\n          })\n        };\n        // title: ['', Validators.required],\n        //   content: ['', Validators.required],\n        //     cta_text: [''],\n        //       cta_link: [''],\n        //         image: [''],\n        const formData = new FormData();\n        formData.append('photo', image);\n        formData.append('title', title);\n        formData.append('content', content);\n        formData.append('cta_text', cta_text);\n        formData.append('cta_link', cta_link);\n        this.http.post(this.headers_url, formData, httpOptions).subscribe({\n          next: res => {\n            console.log(\" resolve(res);\", resolve(res));\n            return resolve(res);\n          },\n          error: err => {\n            reject(err);\n            console.log(\" Error(res);\", reject(err));\n          },\n          complete: () => {\n            console.log('complete');\n          }\n        });\n      });\n      return promise;\n    }\n  }\n  ApisService.ɵfac = function ApisService_Factory(t) {\n    return new (t || ApisService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ApisService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApisService,\n    factory: ApisService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApisService;\n})();","map":null,"metadata":{},"sourceType":"module"}