{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { ApisService } from \"../services/apis.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/apis.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthguardGuard = /*#__PURE__*/(() => {\n  class AuthguardGuard {\n    constructor(apiService, router) {\n      this.apiService = apiService;\n      this.router = router;\n    }\n    // canActivate(\n    //   route: ActivatedRouteSnapshot,\n    //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    //   // return true;\n    //   let isAuth = this.apiService.isAuthenticated();\n    //   if (!isAuth) {\n    //     console.log(\"ISAuth is\", isAuth)\n    //     //  this.router.navigate(['upgrade']);\n    //     console.log(\"RUnning this and other\")\n    //     return false;\n    //   }\n    //   else {\n    //     console.log(\"AUthed\")\n    //     return true;\n    //   }\n    // }\n    canActivate(route, state) {\n      let isAuth = this.apiService.isAuthenticated();\n      if (!isAuth) {\n        console.log(\"ISAuth is\", isAuth);\n        this.router.navigate(['upgrade']);\n      } else {\n        console.log(\"AUTHED\");\n        // this.router.navigate(['upgrade']);  \n        return true;\n      }\n    }\n  }\n  AuthguardGuard.ɵfac = function AuthguardGuard_Factory(t) {\n    return new (t || AuthguardGuard)(i0.ɵɵinject(i1.ApisService), i0.ɵɵinject(i2.Router));\n  };\n  AuthguardGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthguardGuard,\n    factory: AuthguardGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthguardGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}